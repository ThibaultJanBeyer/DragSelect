"use strict";(self.webpackChunkdrag_select_docs=self.webpackChunkdrag_select_docs||[]).push([[335],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(n),c=r,k=u["".concat(d,".").concat(c)]||u[c]||m[c]||l;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:2},i="Events",o={unversionedId:"API/Events",id:"API/Events",title:"Events",description:"DragSelect follows a PubSub pattern. It will emit useful events you can subscribe to like this:",source:"@site/docs/API/Events.mdx",sourceDirName:"API",slug:"/API/Events",permalink:"/docs/API/Events",draft:!1,editUrl:"https://github.com/ThibaultJanBeyer/DragSelect/docs/API/Events.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Settings",permalink:"/docs/API/Settings"},next:{title:"Methods",permalink:"/docs/API/Methods"}},d={},s=[{value:"Public Events",id:"public-events",level:2},{value:"Callback Object",id:"callback-object",level:2}],p={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"events"},"Events"),(0,r.kt)("p",null,"DragSelect follows a PubSub pattern. It will emit useful events you can subscribe to like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const ds = new DragSelect({});\nds.subscribe('<event_name>', (callback_object) => {})\n")),(0,r.kt)("h2",{id:"public-events"},"Public Events"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"event_name"),(0,r.kt)("th",{parentName:"tr",align:null},"callback_object"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback")),(0,r.kt)("td",{parentName:"tr",align:null},"{ items, event, isDragging, dropTarget, \u2026 }"),(0,r.kt)("td",{parentName:"tr",align:null},"Fired after the selection (i.e. on mouse-up).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dragstart")),(0,r.kt)("td",{parentName:"tr",align:null},"{ items, event, isDragging, isDraggingKeyboard, \u2026 }"),(0,r.kt)("td",{parentName:"tr",align:null},"Fired when the selection starts (i.e. on mouse-down).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dragmove")),(0,r.kt)("td",{parentName:"tr",align:null},"{ items, event, isDragging, isDraggingKeyboard, \u2026 }"),(0,r.kt)("td",{parentName:"tr",align:null},"Fired when the mouse moves while dragging (i.e. on mouse-move).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"autoscroll")),(0,r.kt)("td",{parentName:"tr",align:null},"{ items, isDragging, scroll_directions, scroll_multiplier, \u2026 }"),(0,r.kt)("td",{parentName:"tr",align:null},"Fired when the area is auto-scrolled (i.e. cursor on a corner of the area).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"elementselect")),(0,r.kt)("td",{parentName:"tr",align:null},"{ items, item, \u2026 }"),(0,r.kt)("td",{parentName:"tr",align:null},"Fired when an element is added to the selection.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"elementunselect")),(0,r.kt)("td",{parentName:"tr",align:null},"{ items, item, \u2026 }"),(0,r.kt)("td",{parentName:"tr",align:null},"Fired when an element is removed from the selection.")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: all your callbacks subscribers will run after the internal code ran. If you want to run something before everything else, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"pre")," prefix. I.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"predragstart")," is an event that runs before any internal start logic.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'Note: there are way more so called "internal events" but hooking to those is not recommended since they might change in future and break your implementation.')),(0,r.kt)("h2",{id:"callback-object"},"Callback Object"),(0,r.kt)("p",null,"The callback object is made up of different parts depending of the event. All properties are not guaranteed so it is important to check for their availability before using them. I.e. like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const ds = new DragSelect({});\nds.subscribe('callback', (callback_object) => {\n  if(callback_object.items) {\n    // do something with the items\n  }\n})\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"callback_object_keys"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"event")),(0,r.kt)("td",{parentName:"tr",align:null},"MouseEvent ","|"," TouchEvent ","|"," KeyboardEvent ","|"," any"),(0,r.kt)("td",{parentName:"tr",align:null},"The native browser event, the type is depending on the situational context")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"items")),(0,r.kt)("td",{parentName:"tr",align:null},"[ HTMLElement ","|"," SVGElement ","|"," any ]"),(0,r.kt)("td",{parentName:"tr",align:null},"Current selected elements")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"item")),(0,r.kt)("td",{parentName:"tr",align:null},"HTMLElement ","|"," SVGElement ","|"," any"),(0,r.kt)("td",{parentName:"tr",align:null},"The single element currently being interacted with if any")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isDragging")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"If true, the user is dragging the selected elements, if false the user is selecting")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isDraggingKeyboard")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"If true, the user is dragging the selected elements with the keyboard")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"scroll_directions")),(0,r.kt)("td",{parentName:"tr",align:null},"[ 'top' ","|"," 'bottom' ","|"," 'left' ","|"," 'right' ","|"," undefined ]"),(0,r.kt)("td",{parentName:"tr",align:null},"The direction in which the event is happening (i.e. scroll direction)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"scroll_multiplier")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"The scrolling speed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dropTarget")),(0,r.kt)("td",{parentName:"tr",align:null},"{ ",(0,r.kt)("br",null),"\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"td"},"id"),": string,",(0,r.kt)("br",null),"\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"td"},"element"),": HTMLElement ","|"," SVGElement ","|"," any,",(0,r.kt)("br",null),"\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"td"},"droppables"),": ","[ HTMLElement ","|"," SVGElement ","|"," any ]",",",(0,r.kt)("br",null),"\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"td"},"itemsDropped"),": ","[ HTMLElement ","|"," SVGElement ","|"," any ]",",",(0,r.kt)("br",null),"\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"td"},"itemsInside"),": ","[ HTMLElement ","|"," SVGElement ","|"," * ]"," ",(0,r.kt)("br",null),"}"),(0,r.kt)("td",{parentName:"tr",align:null},"dropZone in which the droppable elements were dropped into. ",(0,r.kt)("inlineCode",{parentName:"td"},"id"),": is the identifier string of the zone. ",(0,r.kt)("inlineCode",{parentName:"td"},"droppables"),": the elements that are assigned to this zone. ",(0,r.kt)("inlineCode",{parentName:"td"},"itemsDropped"),": all items that were dropped on the target. ",(0,r.kt)("inlineCode",{parentName:"td"},"itemsInside"),": all items that are within the bounds of the zone")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"key")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Pressed key (lowercase)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"settings")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"Settings"},"Settings")),(0,r.kt)("td",{parentName:"tr",align:null},"The settings being updates/manipulated/passed, also holds the previous value. i.e. updating selectorClass will publish { settings: { selectorClass: 'newVal', 'selectorClass:pre': 'oldVal' } }")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: all object keys are optional and might not be available, depending on the event type. So make sure to check for availability first")))}m.isMDXComponent=!0}}]);